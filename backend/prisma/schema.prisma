generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Building {
  idBuilding   Int        @id @default(autoincrement()) @db.UnsignedInt
  lat          Float      @db.Float
  long         Float      @db.Float
  information  String?    @db.Text
  territory_id Int?       @db.UnsignedMediumInt
  Territory    Territory? @relation(fields: [territory_id], references: [idTerritory], onDelete: Cascade, map: "idTerritory")
  Door         Door[]

  @@index([territory_id], map: "idTerritory_idx")
}

model Congregation {
  idCongregation Int         @id @default(autoincrement()) @db.UnsignedMediumInt
  name           String?     @db.VarChar(255)
  language       String?     @db.VarChar(100)
  last_modified  DateTime?   @default(now()) @db.Timestamp(0)
  Door           Door[]
  Language       Language[]
  Publisher      Publisher[]
  Territory      Territory[]
}

model Door {
  idDoor           Int          @id @default(autoincrement()) @db.UnsignedInt
  language         String?      @db.VarChar(100)
  information_name String?      @db.Text
  building_id      Int?         @db.UnsignedInt
  id_cong_app      Int          @db.UnsignedMediumInt
  id_cong_lang     Int          @db.UnsignedMediumInt
  Building         Building?    @relation(fields: [building_id], references: [idBuilding], onDelete: Cascade, map: "idBuilding")
  Congregation     Congregation @relation(fields: [id_cong_app], references: [idCongregation], onDelete: Cascade, map: "id_cong_app1")
  Language         Language     @relation(fields: [id_cong_lang], references: [id_cong_app], onDelete: NoAction, onUpdate: NoAction, map: "id_cong_lang")

  @@index([building_id], map: "idBuilding_idx")
  @@index([id_cong_app], map: "id_cong_app_idx")
  @@index([id_cong_lang], map: "id_cong_lang_idx")
}

model Language {
  idLanguage   Int          @id @default(autoincrement()) @db.UnsignedInt
  id_cong_app  Int          @db.UnsignedMediumInt
  id_cong_lang Int          @db.UnsignedMediumInt
  name         String       @db.VarChar(100)
  Door         Door[]
  Congregation Congregation @relation(fields: [id_cong_app], references: [idCongregation], onDelete: Cascade, map: "id_cong_app")

  @@index([id_cong_app], map: "id_cong_app_idx")
}

model Publisher {
  idPublisher     Int           @id @default(autoincrement()) @db.UnsignedMediumInt
  name            String?       @db.VarChar(255)
  congregation_id Int?          @db.UnsignedMediumInt
  Congregation    Congregation? @relation(fields: [congregation_id], references: [idCongregation], onDelete: Cascade, map: "idCongregation2")

  @@index([congregation_id], map: "idCongregation_idx")
}

model Territory {
  idTerritory     Int           @id @default(autoincrement()) @db.UnsignedMediumInt
  name            String?       @db.VarChar(255)
  congregation_id Int?          @db.UnsignedMediumInt
  Building        Building[]
  Congregation    Congregation? @relation(fields: [congregation_id], references: [idCongregation], onDelete: Cascade, map: "idCongregation")

  @@index([congregation_id], map: "idCongregation_idx")
}
